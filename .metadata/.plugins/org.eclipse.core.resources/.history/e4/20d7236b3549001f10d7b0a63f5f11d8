package modal.entities;

public class Account {
	
	private Integer number;
	private String holder;
	private Double balance;
	private Double withDrawLimit;
	
	public Account() {
		super();
	}

	public Account(Integer number, String holder, Double balance, Double withDrawLimit) {
		super();
		this.number = number;
		this.holder = holder;
		this.balance = balance;
		this.withDrawLimit = withDrawLimit;
	}

	public Integer getNumber() {
		return number;
	}

	public String getHolder() {
		return holder;
	}


	public Double getBalance() {
		return balance;
	}

	public Double getWithDrawLimit() {
		return withDrawLimit;
	}

	public void deposit(Double amount) {
		this.balance += amount;
	}
	
	public void withDraw(Double amount) {
		if(withDrawLimit < amount) {
			throw new IllegalArgumentException("The amount exceeds withdraw limit.");
		}
		if(balance < amount) {
			throw new IllegalArgumentException("Not enough balance.");
		}
		if(withDrawLimit < amount || balance < amount) {
			throw new IllegalArgumentException("The amount exceeds withdraw limit.");
		}
		this.balance -= amount;
	}
	
	@Override
	public String toString() {
		return null;
	}
	
}
